{"version":3,"sources":["components/SearchInput/SearchInput.module.css","components/PopupList/PopupList.module.css","components/Spinner/Spinner.module.css","components/SearchBox/SearchBox.module.css","App.module.css","components/Spinner/Spinner.js","components/SearchBox/duck/actions.js","components/SearchBox/duck/types.js","components/SearchBox/duck/reducers.js","utils/http.js","components/SearchBox/duck/sagas.js","components/SearchInput/SearchInput.js","components/PopupList/ListItem.js","components/PopupList/PopupList.js","components/SearchBox/SearchBox.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Spinner","className","cn","styles","spinner","getCountries","search","type","initialState","loading","loaded","list","reducer","state","action","http","axios","create","baseURL","fetchCountries","actionWatcher","rootSaga","source","CancelToken","params","get","cancelToken","token","results","put","data","cancelled","cancel","takeLatest","task","take","SearchInput","handleChange","e","target","value","props","onChange","inputRef","createRef","this","current","focus","prevProps","onClear","container","inputContainer","ref","input","tabIndex","onClick","button","Component","mapDispatchToProps","connect","ListItem","handleSelect","country","onSelect","name","handleKeyDown","keyCode","order","higlight","parts","split","RegExp","lowerHiglight","toLowerCase","item","onKeyDown","map","part","i","key","PopupList","handleClickOutside","open","popupRef","contains","setState","document","addEventListener","removeEventListener","length","noResults","SearchBox","cancelCountriesRequest","App","app","Boolean","window","location","hostname","match","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","run","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.311b076d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchInput_container__3uWdW\",\"inputContainer\":\"SearchInput_inputContainer__1ycf_\",\"spinner\":\"SearchInput_spinner__24ocO\",\"input\":\"SearchInput_input__2wCi4\",\"button\":\"SearchInput_button__rkUK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PopupList_container__2wds7\",\"noResults\":\"PopupList_noResults__2FwMk\",\"item\":\"PopupList_item__qGwqZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1Neu5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchBox_container__BKYRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","import React from 'react';\nimport cn from 'classnames';\n\nimport styles from './Spinner.module.css';\n\nexport const Spinner = ({ className }) => <div className={cn(styles.spinner, className)} />;\n\n","import { COUNTRIES_REQUEST, COUNTRIES_REQUEST_CANCEL } from './types';\n\nexport const getCountries = (search = '') => ({\n  type: COUNTRIES_REQUEST,\n  search\n});\n\nexport const cancelCountriesRequest = () => ({ type: COUNTRIES_REQUEST_CANCEL });","export const COUNTRIES_REQUEST = 'COUNTRIES_REQUEST';\nexport const COUNTRIES_REQUEST_SUCCESS = 'COUNTRIES_REQUEST_SUCCESS';\nexport const COUNTRIES_REQUEST_CANCEL = 'COUNTRIES_REQUEST_CANCEL';\nexport const COUNTRIES_REQUEST_CANCELED = 'COUNTRIES_REQUEST_CANCELED';","import {\n  COUNTRIES_REQUEST, COUNTRIES_REQUEST_SUCCESS, COUNTRIES_REQUEST_CANCEL, COUNTRIES_REQUEST_CANCELED\n} from './types';\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  list: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case COUNTRIES_REQUEST:\n      return { ...state, list: [], loading: true, loaded: false };\n    case COUNTRIES_REQUEST_SUCCESS:\n      return { ...state, list: action.list, loading: false, loaded: true };\n    case COUNTRIES_REQUEST_CANCEL:\n    case COUNTRIES_REQUEST_CANCELED:\n      return { ...state, list: [], loading: false, loaded: false };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import axios from 'axios';\n\nexport const http = axios.create({\n  baseURL: 'https://swapi.co/api/',\n});","import { put, takeLatest, take, cancel, cancelled } from 'redux-saga/effects';\nimport { CancelToken } from 'axios';\n\nimport { http } from '../../../utils';\nimport {\n  COUNTRIES_REQUEST, COUNTRIES_REQUEST_SUCCESS, COUNTRIES_REQUEST_CANCEL, COUNTRIES_REQUEST_CANCELED\n} from './types';\n\nexport function* fetchCountries({ search } = {}) {\n  const source = CancelToken.source();\n\n  try {\n    const params = { search };\n    const results = yield http.get('planets/', { params, cancelToken: source.token });\n\n    yield put({ type: COUNTRIES_REQUEST_SUCCESS, list: results.data.results })\n  } finally {\n    if(yield cancelled()) {\n      source.cancel('Cancelled');\n      yield put({ type: COUNTRIES_REQUEST_CANCELED });\n    }\n  }\n}\n\nfunction* actionWatcher() {\n  while(true) {\n    const task = yield takeLatest(COUNTRIES_REQUEST, fetchCountries);\n\n    yield take(COUNTRIES_REQUEST_CANCEL);\n    yield cancel(task);\n  }\n}\n\nexport default function* rootSaga() {\n  yield actionWatcher();\n}\n","import React, { Component, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Spinner } from '../Spinner';\nimport { getCountries } from '../SearchBox/duck';\nimport styles from './SearchInput.module.css';\n\nclass SearchInput extends Component {\n  constructor() {\n    super();\n    this.inputRef = createRef();\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { value } = this.props;\n\n    if(prevProps.value && !value) {\n      this.inputRef.current.focus();\n    }\n  }\n\n  handleChange = e => {\n    const search = e.target.value;\n    this.props.onChange(search)\n  };\n\n  render() {\n    const { value, loading, onClear } = this.props;\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.inputContainer}>\n          {loading && <Spinner className={styles.spinner} />}\n          <input\n            ref={this.inputRef}\n            type=\"text\"\n            value={value}\n            onChange={this.handleChange}\n            className={styles.input}\n            tabIndex=\"1\"\n          />\n        </div>\n        {!!value && (\n          <button\n            onClick={onClear}\n            className={styles.button}\n            tabIndex=\"2\"\n          >\n            Clear\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = {\n  getCountries: getCountries,\n};\n\nexport default connect(null, mapDispatchToProps)(SearchInput);","import React, { Component } from 'react';\n\nimport styles from './PopupList.module.css';\n\nexport class ListItem extends Component {\n  handleSelect = () => {\n    const { country, onSelect } = this.props;\n    onSelect(country.name);\n  };\n\n  handleKeyDown = e => {\n    if(e.keyCode === 13) {\n      this.handleSelect();\n    }\n  };\n\n  render() {\n  const { country, order, higlight } = this.props;\n    const { name } = country;\n    const parts = name.split(new RegExp(`(${higlight})`, 'gi'));\n    const lowerHiglight = higlight.toLowerCase();\n\n    return (\n      <div className={styles.item} tabIndex={10 + order} onClick={this.handleSelect} onKeyDown={this.handleKeyDown}>\n        {parts.map((part, i) => part.toLowerCase() === lowerHiglight\n          ? <b key={i}>{part}</b>\n          : <span key={i}>{part}</span>)}\n      </div>\n    )\n  };\n}\n","import React, { Component, createRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { ListItem } from './ListItem';\nimport styles from './PopupList.module.css';\n\nclass PopupList extends Component {\n  constructor() {\n    super();\n    this.popupRef = createRef();\n    this.state = { open: false };\n  }\n\n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentDidUpdate(prevProps) {\n    if(!prevProps.loaded && this.props.loaded) {\n      this.setState({ open: true });\n    }\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleClickOutside = e => {\n    const { open } = this.state;\n    if (open && this.popupRef.current && !this.popupRef.current.contains(e.target)) {\n      this.setState({ open: false });\n    }\n  }\n\n  handleKeyDown = e => {\n    if(e.keyCode === 27) {\n      this.setState({ open: false });\n    }\n  };\n\n  onSelect = search => {\n    const { onSelect } = this.props;\n    this.setState({ open: false });\n    onSelect(search);\n  };\n\n  render() {\n    const { open } = this.state;\n    const { list, value, loaded }  = this.props;\n\n    if(!open) return null;\n\n    return (\n      <div className={styles.container} ref={this.popupRef}>\n        {loaded && !list.length && (<div className={styles.noResults}>No results</div>)}\n        {list.map((country, i) => <ListItem country={country} key={i} order={i} higlight={value} onSelect={this.onSelect} />)}\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToState = state => state;\n\nexport default connect(mapDispatchToState)(PopupList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { SearchInput } from '../SearchInput';\nimport { PopupList } from '../PopupList';\nimport { getCountries, cancelCountriesRequest } from './duck';\n\nimport styles from './SearchBox.module.css';\n\nconst initialSearch = '';\n\nclass SearchBox extends Component {\n  constructor() {\n    super();\n    this.state = { search: initialSearch };\n  }\n\n  handleChange = search => {\n    const { getCountries } = this.props;\n    if(search === initialSearch) {\n      this.onClear();\n    } else {\n      this.setState({ search });\n      return getCountries(search);\n    }\n  };\n\n  onSelect = search => {\n    this.setState({ search });\n  };\n\n  onClear = () => {\n    this.setState({ search: initialSearch });\n    return this.props.cancelCountriesRequest()\n  };\n\n  render() {\n    const { search } = this.state;\n    const { loading, loaded, list } = this.props;\n\n    return (\n      <div className={styles.container}>\n        <SearchInput\n          value={search}\n          loading={loading}\n          onChange={this.handleChange}\n          onClear={this.onClear}\n        />\n        <PopupList\n          list={list}\n          value={search}\n          loaded={loaded}\n          onSelect={this.onSelect}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToState = state => state;\nconst mapDispatchToProps = {\n  getCountries: getCountries,\n  cancelCountriesRequest: cancelCountriesRequest\n};\n\nexport default connect(mapDispatchToState, mapDispatchToProps)(SearchBox);","import React from 'react';\n\nimport { SearchBox } from './components';\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <SearchBox />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { reducer, rootSaga } from './components/SearchBox';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(sagaMiddleware),\n  )\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}